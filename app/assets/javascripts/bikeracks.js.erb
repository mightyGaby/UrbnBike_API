var map;
var mapBounds;
var geojson;
var markers
var newMarker;
var downTime;
var upTime;
var clusterGroup;

var locateZoom = 18;


$(document).ready(function(){

  //=========================================CREATES MAP
  L.mapbox.accessToken = 'pk.eyJ1IjoiZ2FicmllbGxlaWRhcnVpemZ1bmVzIiwiYSI6IjNjNGQ5MjM3MmMxMGI1YzNlMDJlZDZlYzA3NTc5NTJhIn0.rN0bLsGk3EFALg_1zo09eg';
  map = L.mapbox.map('map', 'mapbox.streets')
      .setView([41.893974, -87.627945], 14);
      map.zoomControl.setPosition('bottomleft');

  console.log("map loaded!")

  getData();

  map.addEventListener('viewreset', function(){
    getData().done(renderPartial);
  });


  //=========================================LOADS MARKERS FROM DATABASE
  function getData() {
    return $.ajax({
      url: '/api/markers.json',
      type: 'get',
      dataType: 'text',
      success: function(data){
        geojson = $.parseJSON(data);
        // initializeView(geojson);

        var myLayer = L.mapbox.featureLayer()

        console.log(geojson.length);
        mapBounds = map.getBounds();
        var inBounds = [];

        L.geoJson({
            type: 'FeatureCollection',
            features: geojson
          })
          .eachLayer(function(layer) {
            myLayer.addLayer(layer);
          });

          myLayer.eachLayer(function(marker) {
            if (mapBounds.contains(marker.getLatLng())) {
                inBounds.push(marker);
              }
          })

        console.log(inBounds)

        // console.log(inBounds)
        clusterGroup = new L.MarkerClusterGroup({
          chunkedLoading: true
        });

        L.geoJson({
            type: 'FeatureCollection',
            features: geojson
          })
          .addTo(map)
          .eachLayer(function(layer) {
            clusterGroup.addLayer(layer);
          });

      }
    });
  }

  // function renderPartial(data){
  //   var inBounds = [];
  //
  //   mapBounds = map.getBounds();
  //   console.log(mapBounds);
  //
  //   clusterGroup.eachLayer(function(marker) {
  //     if (mapBounds.contains(marker.getLatLng())) {
  //         inBounds.push(marker.options.title);
  //       }
  //   })
  //
  //
  //   map.removeLayer();
  //
  //   L.geoJson({
  //       type: 'FeatureCollection',
  //       features: inBounds
  //     })
  //     // .addTo(map);
  //     .eachLayer(function(layer) {
  //       clusterGroup.addLayer(layer);
  //     });
  //     map.addLayer(clusterGroup);
  //   });
  //
  // };

      //
      //
      // markers.setGeoJSON({
      //     type: 'FeatureCollection',
      //     features: geoPartOne
      //   })
      //   .eachLayer(function(layer) {
      //     clusterGroup.addLayer(layer);
      //   });


  function initializeView(data) {
    var myLayer = L.mapbox.featureLayer()

    console.log(data.length);
    mapBounds = map.getBounds();
    var inBounds = [];

    L.geoJson({
        type: 'FeatureCollection',
        features: geojson
      })
      .eachLayer(function(layer) {
        myLayer.addLayer(layer);
      });

      myLayer.eachLayer(function(marker) {
        if (mapBounds.contains(marker.getLatLng())) {
            inBounds.push(marker);
          }
      })

    console.log(inBounds)

    // console.log(inBounds)
    clusterGroup = new L.MarkerClusterGroup({
      chunkedLoading: true
    });

    L.geoJson({
        type: 'FeatureCollection',
        features: inBounds
      })
      .addTo(map)
      .eachLayer(function(layer) {
        clusterGroup.addLayer(layer);
      });

  }



  // markers.eachLayer(function(m) {
  //   m.on("dblclick", function(){
  //     console.log(m);
  //
  //     m.bindPopup('<button id="warning-btn">Add Warning</button>').addTo(map);
  //
  //     // $('#warning-btn').on('click', function(){
  //     //   console.log('clicked!')
  //     //   $.ajax({
  //     //     url: '/api/warnings',
  //     //     type: 'post',
  //     //     data:{
  //     //       warning: {
  //     //         date_added: Date.now(),
  //     //         warning_type: 1
  //     //       }
  //     //     },
  //     //     success: function(data){
  //     //       console.log(data);
  //     //       console.log('warning added!');
  //     //     }
  //     //   });
  //     // })
  //   });
  // });
  //=========================================ADD MARKER ON CLICK & HOLD
  map.on('mousedown', function mouseState(e) {
    downTime = Date.now()
  });

  map.on('mouseup', function(e){
    upTime = Date.now();
    if (downTime && (downTime+1000) < upTime){

      console.log(downTime)
      console.log(upTime)

      var latlng = e.latlng;
      newLocation(latlng.lng, latlng.lat);
    }
    else{ console.log("click-hold not long enough")}
    downTime = false;
  });

  $('#save-marker').on('click', function(){
    console.log(downTime);
    console.log(upTime);
    $.ajax({
      url: '/bikeracks',
      type: 'post',
      dataType: 'json',
      data: {
        bikerack: {
          address: "TEST",
          neighborhood: "TEST",
          lat: latlng.lat,
          lng: latlng.lng,
          location: latlng.toString()
        }
      },
      success: function(data) {
        console.log("success!!");
        alert('location saved!');
      }
    });
  });

  //=========================================CENTER MAP ON USER LOCATION
  var geolocate = document.getElementById('geolocate');
  if (!navigator.geolocation) {
      alert('Geolocation is not available');
  } else {
      geolocate.onclick = function (e) {
          e.preventDefault();
          e.stopPropagation();
          map.locate();
      };
  }
  map.on('locationfound', function(e) {
      map.fitBounds(e.bounds);

      var searchLocation = ({
          type: 'Feature',
          geometry: {
              type: 'Point',
              coordinates: [e.latlng.lng, e.latlng.lat],
          },
          properties: {
              'title': 'Here I am!',
              'marker-color': '#ff8888',
              'marker-symbol': 'star'
          }
      });

      myLayer.addData(searchLocation);
  });

  // If the user chooses not to allow their location
  // to be shared, display an error message.
  map.on('locationerror', function() {
      alert('Position could not be found');
  });

  //=========================================CENTERS MAP ON LOCATION SEARCH VIA FORM
  $('#search-location').on('click', function(){
    var geocoder = L.mapbox.geocoder('mapbox.places');
    var query = $("#address").val()
    console.log(query)
    geocoder.query(query, showMap);

    function showMap(err, data) {
      var myLocation = ({
          type: 'Feature',
          geometry: {
              type: 'Point',
              coordinates: [data.latlng[1], data.latlng[0]],
          },
          properties: {
              'title': 'Your Search',
              'marker-size': 'large',
              'marker-color': '#66ccff',
              'marker-symbol': 'embassy'
          }
      });

      if (data.lbounds) {
          map.fitBounds(data.lbounds);
          map.setZoom(locateZoom);
      } else if (data.latlng) {
          map.setView([data.latlng[1], data.latlng[0]], locateZoom);
      }
    }

    myLayer.addData(myLocation);

  });


}); //end of document.ready


//creates new marker from click
function newLocation(lng, lat){
  newMarker = L.mapbox.featureLayer({
    type: 'Feature',
    geometry: {
        type: 'Point',
        coordinates: [ lng, lat ]
    },
    properties: {
        'marker-size': 'large',
        'marker-color': '#BE9A6B',
        'marker-symbol': 'bicycle',
        'className': 'newMarker',
    },
  })
  newMarker.bindPopup('<button id="save-marker"> Save location </button>').addTo(map);

};
