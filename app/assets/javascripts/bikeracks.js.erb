var map;
var mapBounds;
var mapZoom;
var geojson;
var downTime;
var upTime;
var clusterLayer;
var newMarker;


var clicked;
var inBounds = [];
var locateZoom = 15;

var app = app || {};

$(document).ready(function(){
  //=========================================CREATES MAP
  L.mapbox.accessToken = 'pk.eyJ1IjoiZ2FicmllbGxlaWRhcnVpemZ1bmVzIiwiYSI6IjNjNGQ5MjM3MmMxMGI1YzNlMDJlZDZlYzA3NTc5NTJhIn0.rN0bLsGk3EFALg_1zo09eg';
  map = L.mapbox.map('map', 'mapbox.streets')
      .setView([41.893974, -87.627945], 14);

      L.control.fullscreen().addTo(map);
      map.zoomControl.setPosition('bottomleft');


  console.log("map loaded!")

  getData().done(markerClusters);

  map.addEventListener('viewreset', function(){
    console.log("zoom: " + map.getZoom());
    console.log("map move!");
    console.log("data points: " + inBounds.length)

    mapZoom = map.getZoom();
    markerClusters();
  });

  $(function () {
    $('[data-toggle="popover"]').popover()
  })


  //=========================================LOADS MARKERS FROM DATABASE
  function getData() {
    return $.ajax({
      url: '/api/markers.json',
      type: 'get',
      dataType: 'text',
      success: function(data){
        geojson = $.parseJSON(data);
        console.log("Bikerack geojson data returned!");
      }
    });
  }

  function getInBounds(){
    var tempLayer = L.mapbox.featureLayer()
    mapBounds = map.getBounds();
    inBounds = [];

    L.geoJson({
        type: 'FeatureCollection',
        features: geojson
      })
      .eachLayer(function(layer) {
        tempLayer.addLayer(layer);
    });

    tempLayer.eachLayer(function(marker) {
      if (mapBounds.contains(marker.getLatLng())) {
        inBounds.push(marker.feature);
      }
    })
  }

  function markerClusters() {
    getInBounds();

    clusterLayer = new L.MarkerClusterGroup({
      chunkedLoading: true,
      disableClusteringAtZoom: 16,
      });

    L.mapbox.featureLayer({
        type: 'FeatureCollection',
        features: inBounds
      })
      .eachLayer(function(layer) {
        clusterLayer.addLayer(layer);
      });

    map.addLayer(clusterLayer);

    clusterLayer.on('click', function(e) {
      clicked = true;
      map.panTo(e.layer.getLatLng());

      e.layer.openPopup();
      $(".marker-info").html('<button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample" id="show-comments">Show Comments</button>')
      $(".marker-info").show();
      $(".leaflet-popup").addClass("bikerack-info");


      e.layer.on('closePopup', function(){
        $(".leaflet-popup").removeClass("bikerack-info");
      });

      $("#show-comments").on('click', function(){
        console.log('clicked');
        $(".leaflet-popup").removeClass("bikerack-info");
        clicked = false;
        e.layer.closePopup();
      });

    });

    clusterLayer.on('mouseover', function(e) {
      e.layer.openPopup();
    });

    clusterLayer.on('mouseout', function(e) {
      if(!clicked){
        e.layer.closePopup();
      }
    });
  }

  //=========================================ADD MARKER ON CLICK & HOLD
  map.on('mousedown', function mouseState(e) {
    downTime = Date.now()
  });

  map.on('mouseup', function(e){
    var latlng = e.latlng;
    var save;
    console.log(clicked);

    if(!clicked){
      upTime = Date.now();
      if (downTime && (downTime+800) < upTime){

        newLocation(latlng.lng, latlng.lat);
      }

      $("#save-marker").on('click', function(){
        save = true;
        $.ajax({
          url: '/bikeracks',
          type: 'post',
          dataType: 'json',
          data: {
            bikerack: {
              address: "TEST",
              neighborhood: "TEST",
              lat: latlng.lng,
              lng: latlng.lat,
              location: [latlng.lng, latlng.lat]
            }
          },
          success: function(){
            console.log('marker saved!');
          }
        });
      })

      // if(!save){
      //   map.removeLayer(newMarker);
      // }

    }
    else{ console.log("click-hold not long enough")}
    downTime = false;
  });

  //=========================================CENTER MAP ON USER LOCATION
  var geolocate = document.getElementById('geolocate');
  if (!navigator.geolocation) {
    alert('Geolocation is not available');
  } else {
    geolocate.onclick = function (e) {
      e.preventDefault();
      e.stopPropagation();
      map.locate();
    };
  }
  map.on('locationfound', function(e) {
    map.fitBounds(e.bounds);

    L.mapbox.featureLayer({
      type: 'Feature',
      geometry: {
          type: 'Point',
          coordinates: [e.latlng.lng, e.latlng.lat],
      },
      properties: {
          'title': 'Here I am!',
          'marker-color': '#ff8888',
          'marker-symbol': 'star'
      }
    }).addTo(map);

  });

  // If the user chooses not to allow their location
  // to be shared, display an error message.
  map.on('locationerror', function() {
      // alert('Position could not be found');
    var popup = L.popup()
    .setLatLng(map.getCenter())
    .setContent('<p>Having trouble finding your location</br> Hellp us help you, turn on location services</p>')
    .openOn(map);
  });

  //=========================================CENTERS MAP ON LOCATION SEARCH VIA FORM
  $('#search-location').on("submit", function(e){
    e.preventDefault();
    var geocoder = L.mapbox.geocoder('mapbox.places');
    var query = $("#address").val()
    console.log(query)
    geocoder.query(query, showMap);

    function showMap(err, data) {

      L.mapbox.featureLayer({
        type: 'Feature',
        geometry: {
            type: 'Point',
            coordinates: [data.latlng[1], data.latlng[0]],
        },
        properties: {
            'title': 'Your Search',
            'description': query,
            'marker-size': 'large',
            'marker-color': '#66ccff',
            'marker-symbol': 'embassy'
        },
        draggable: true

      }).addTo(map);

      if (data.lbounds) {
        map.fitBounds(data.lbounds);
      } else if (data.latlng) {
        map.setView([data.latlng[1], data.latlng[0]], locateZoom);
      }
    }
  });

});//END OF DOCUMENT.READY


//creates new marker from click
function newLocation(lng, lat){

  newMarker= L.mapbox.featureLayer({
    type: 'Feature',
    geometry: {
        type: 'Point',
        coordinates: [ lng, lat ]
    },
    properties: {
        'marker-size': 'large',
        'marker-color': '#BE9A6B',
        'marker-symbol': 'bicycle',
        'className': 'newMarker'
    },
    draggable: true
  })
  .bindPopup('<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal" id="save-marker">Save Marker</button>')
  .addTo(map);

};
